name: CI

# Set default shell as interactive (source ~/.bashrc)
defaults:
  run:
    shell: bash -ieo pipefail {0}

# Run only one instance of this workflow at a time
# cancel-in-progress: stop running workflow and run latest instead
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - python-setup
  # Don't forget to require approval for all outside collaborators
  pull_request:
    branches: '*'
  # Allow manual workflow runs
  workflow_dispatch:

jobs:
  pc-emul:
    runs-on: self-hosted
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      - name: pc-emul-test
        run: nix-shell --run "make clean setup && make -C ../iob_soc_sut_V* pc-emul-test"

  verilator:
    runs-on: self-hosted
    timeout-minutes: 30
    # always run, except when previous job was cancelled
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ pc-emul ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      # Init mem
      - name: init_mem
        run: nix-shell --run "make sim-run SIMULATOR=verilator"
      # No init mem
      - name: no_init_mem
        run: nix-shell --run "make sim-run INIT_MEM=0 SIMULATOR=verilator"
  
  icarus:
    runs-on: self-hosted
    timeout-minutes: 90
    # always run, except when previous job was cancelled
    if: ${{ !cancelled() }}
    needs: [ pc-emul ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      # Init mem
      - name: init_mem
        run: nix-shell --run "make sim-run SIMULATOR=icarus"
      # No init mem
      - name: no_init_mem
        run: nix-shell --run "make sim-run INIT_MEM=0 SIMULATOR=icarus"

  tester-icarus:
    runs-on: self-hosted
    timeout-minutes: 90
    # always run, except when previous job was cancelled
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ icarus ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      # Running tests with INIT_MEM=0 is to slow for icarus. Run specific icarus test instead (with INIT_MEM=1)
      # Init mem
      - name: init_mem
        run: nix-shell --run "make tester-sim-test SIMULATOR=icarus"

  tester-verilator:
    runs-on: self-hosted
    timeout-minutes: 90
    # always run, except when previous job was cancelled
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ verilator ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      # Init mem
      - name: init_mem
        run: nix-shell --run "make tester-sim-test SIMULATOR=verilator"
      # No init mem
      - name: no_init_mem
        run: nix-shell --run "make tester-sim-test INIT_MEM=0 SIMULATOR=verilator"
  
  cyclonev:
    runs-on: self-hosted
    timeout-minutes: 60
    if: ${{ !cancelled() }}
    needs: [ icarus, verilator ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      # No init mem
      - name: no_init_mem
        run: nix-shell --run "make fpga-run INIT_MEM=0 BOARD=CYCLONEV-GT-DK"

  # Disabled because Quartus Prime does not support hierarchical referencing (used by ILA for signal probing)
  # https://www.intel.com/content/www/us/en/programmable/quartushelp/20.3/index.htm#msgs/msgs/evrfx2_veri_hierarchical_name_not_supported.htm
  # https://community.intel.com/t5/Intel-Quartus-Prime-Software/Verilog-hierarchical-path-names-in-Quartus/m-p/103845
  #
  #tester-cyclonev:
  #  runs-on: self-hosted
  #  timeout-minutes: 60
  #  # always run, except when previous job was cancelled
  #  if: ${{ !cancelled() }}
  #  # run after indicated job
  #  needs: [ cyclonev ]
  #
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        ssh-key: ${{ secrets.IOB_GHACTIONS }}
  #        submodules: 'recursive'
  #    - name: no_init_mem
  #      run: nix-shell --run "make tester-fpga-test BOARD=CYCLONEV-GT-DK"

  #tester-netlist-cyclonev:
  #  runs-on: self-hosted
  #  timeout-minutes: 60
  #  # always run, except when previous job was cancelled
  #  if: ${{ !cancelled() }}
  #  # run after indicated job
  #  needs: [ tester-cyclonev ]
  #
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        ssh-key: ${{ secrets.IOB_GHACTIONS }}
  #        submodules: 'recursive'
  #    - name: Tester Netlist CYCLONEV
  #      run: nix-shell --run "make tester-sut-netlist BOARD=CYCLONEV-GT-DK"
  
  aes-ku040:
    runs-on: self-hosted
    timeout-minutes: 90
    if: ${{ !cancelled() }}
    needs: [ icarus, verilator ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      # No init mem
      - name: no_init_mem
        run: nix-shell --run "make fpga-run INIT_MEM=0 BOARD=AES-KU040-DB-G"

  tester-aes-ku040:
    runs-on: self-hosted
    timeout-minutes: 90
    # always run, except when previous job was cancelled
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ aes-ku040 ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      - name: no_init_mem
        run: nix-shell --run "make tester-fpga-test BOARD=AES-KU040-DB-G"

  #tester-netlist-aes-ku040:
  #  runs-on: self-hosted
  #  timeout-minutes: 90
  #  # always run, except when previous job was cancelled
  #  if: ${{ !cancelled() }}
  #  # run after indicated job
  #  needs: [ tester-aes-ku040 ]
  #
  #  steps:
  #    - uses: actions/checkout@v3
  #      with:
  #        ssh-key: ${{ secrets.IOB_GHACTIONS }}
  #        submodules: 'recursive'
  #    - name: Tester Netlist KU040
  #      run: nix-shell --run "make tester-sut-netlist BOARD=AES-KU040-DB-G"
  
  doc:
    runs-on: self-hosted
    timeout-minutes: 60
    if: ${{ !cancelled() }}
    needs: [ cyclonev, aes-ku040 ]
  
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.IOB_GHACTIONS }}
          submodules: 'recursive'
      - name: doc test
        run: nix-shell --run "make clean setup && make -C ../iob_soc_sut_V* doc-test"
